package com.example.estoque.api.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.estoque.api.model.Produto;
import com.example.estoque.api.repository.ProdutoRepository;
import com.example.estoque.api.service.ControllerrNotFoundException;
import com.example.estoque.api.service.ProdutoService;

@RestController
@RequestMapping("/produtos")
public class ProdutoController {

	@Autowired
	private ProdutoService produtoService;
	
	@Autowired
	public ProdutoRepository produtoRepository;

	

	@GetMapping
	public List<Produto> lista() {
		return produtoService.findAll();
	}
		@PostMapping
		public ResponseEntity<Produto> inserir(@RequestBody Produto obj){
			obj = produtoService.inserir(obj);
			return ResponseEntity.ok().body(obj);
			
		}

	

	/*@PostMapping
	public ResponseEntity<Produto> criar(@RequestBody Produto produto, HttpServletResponse response) {
		Produto produtoSalvo = produtoRepository.save(produto);
		URI uri = ServletUriComponentsBuilder.fromCurrentRequestUri().path("{codigo}")
				.buildAndExpand(produtoSalvo.getCodigo()).toUri();
		response.setHeader("Location", uri.toASCIIString());
		return ResponseEntity.created(uri).body(produtoSalvo); 

	}*/

	@GetMapping("/{codigo}")
	public ResponseEntity<Produto> buscarPeloCodigo(@PathVariable Long codigo) {
		Produto produto = produtoRepository.findById(codigo).orElse(null);
		return produto != null ? ResponseEntity.ok(produto) : ResponseEntity.notFound().build();

	}

	@PutMapping(value = "/{codigo}")
	public ResponseEntity<Produto> adcionar(@PathVariable Long codigo, @RequestBody Produto obj)
			throws ControllerrNotFoundException {
		obj = produtoService.atualizarQuantidade(codigo, obj);
		return ResponseEntity.ok().body(obj);
	}

}
